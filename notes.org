ifStatement : IF exp THEN block END {}
| IF exp THEN block elseIfBlocks END {}
| IF exp THEN block ELSE block END {}
| IF exp THEN block elseIfBlocks ELSE block END {}
;

elseIfBlocks : ELSEIF exp THEN block {}
| elseIfBlocks ELSEIF exp THEN block {}
;


stream : block {}
| stream block {}
;

block : chunk {}
;

String : DBLQUOTED {}
| QUOTED {}
;
Name : NAME { $$ = $1; }
;
Number : NUMBER { $$ = $1; }
;

Binop : BINOP { $$ = $1; }
| MINUSOP { $$ = {ast::token::BinOPToken::OP::minus}; }
;
Unop : UNOP { $$ = $1; }
| MINUSOP { $$ = {ast::token::UnOPToken::OP::minus}; }
;

chunkStatements : LIST_OPEN stat LIST_CLOSE {}
| LIST_OPEN stat SEMICOLON LIST_CLOSE {}
| chunkStatements LIST_OPEN stat LIST_CLOSE {}
| chunkStatements LIST_OPEN stat SEMICOLON LIST_CLOSE {}
;

chunk : chunkStatements laststat {}
| laststat {}
| chunkStatements laststat SEMICOLON {}
| laststat SEMICOLON {}
;

stat : varlist EQUALS explist {}
| functioncall {}
| FUNCTION funcname funcbody {}
| LOCAL FUNCTION Name funcbody {}
| LOCAL namelist {}
| LOCAL namelist EQUALS explist {}
| DO block END {}
| WHILE exp DO block END {}
| REPEAT block UNTIL exp {}
| FOR Name EQUALS exp COMMA exp DO block END {}
| FOR Name EQUALS exp COMMA exp COMMA exp DO block END {}
| FOR namelist IN explist DO block END {}
;


laststat : RETURN {}
| RETURN explist {}
| BREAK {}
;

funcnamePart : Name {}
| funcnamePart DOT Name {}
;

funcname : funcnamePart {}
| funcnamePart COLON Name {}
;

varlist : var {}
| varlist COMMA var {}
;

var : Name {}
| prefixexp SQUARE_OPEN exp SQUARE_CLOSE {}
| prefixexp DOT Name {}
;

namelist : Name {}
| namelist COMMA Name {}
;

explist : exp {}
| explist COMMA exp {}
;

exp : NIL {}
| FALSE {}
| TRUE {}
| Number {}
| String {}
| VARIABLE_LIST {}
| function {}
| prefixexp {}
| tableconstructor {}
| exp Binop exp {}
| Unop exp {}
;

prefixexp : var {}
| functioncall {}
| PARENTHESIS_OPEN exp PARENTHESIS_CLOSE {}
;

functioncall : prefixexp args {}
| prefixexp COLON Name args {}
;

args : PARENTHESIS_OPEN PARENTHESIS_CLOSE {}
| PARENTHESIS_OPEN explist PARENTHESIS_CLOSE {}
| tableconstructor {}
| String {}
;

function : FUNCTION funcbody {}
;

funcbody : PARENTHESIS_OPEN PARENTHESIS_CLOSE block END {}
| PARENTHESIS_OPEN parlist PARENTHESIS_CLOSE block END {}
;

parlist : namelist
| namelist COMMA VARIABLE_LIST {}
| VARIABLE_LIST {}
;

tableconstructor : LIST_OPEN LIST_CLOSE {}
| LIST_OPEN fieldlist LIST_CLOSE {}
;

fieldlistParts : field {}
| fieldlistParts fieldsep field {}
;

fieldlist : fieldlistParts {}
| fieldlistParts fieldsep {}
;

field : SQUARE_OPEN exp SQUARE_CLOSE EQUALS exp {}
| Name EQUALS exp {}
| exp {}
;

fieldsep : COMMA {}
| SEMICOLON {}
;


%type <std::string> String
%type <std::string> Name
%type <std::string> Number
%type	<ast::Node> block chunkStatements chunk stat laststat funcnamePart funcname varlist var namelist explist exp prefixexp functioncall args function funcbody parlist tableconstructor fieldlistParts fieldlist field fieldsep

%type <ast::token::BinOPToken> Binop
%type <ast::token::UnOPToken> Unop
